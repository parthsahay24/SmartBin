<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs/2.3.0/alpine.js" integrity="sha512-nIwdJlD5/vHj23CbO2iHCXtsqzdTTx3e3uAmpTm4x2Y8xCIFyWu4cSIV8GaGe2UNVq86/1h9EgUZy7tn243qdA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js"></script>

    <style>
        @font-face {
            font-family: 'nb';
            src: url('./font1.ttf');
        }
        @font-face {
            font-family: 'rh';
            src: url('./font2.ttf');
        }
        body {
            background-image: url('https://images.unsplash.com/photo-1518173946687-a4c8892bbd9f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
        }
        .bg-overlay {
            background: rgba(0, 0, 0, 0.6);
            backdrop-filter: blur(5px);
            transition: backdrop-filter 0.5s ease;
        }
        .bg-overlay:hover {
            backdrop-filter: blur(10px);
        }
        .fade-in {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
        }
        .fade-in.visible {
            opacity: 1;
            transform: translateY(0);
        }
        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }
        .float-animation {
            animation: float 3s ease-in-out infinite;
        }
        .text-glow {
            text-shadow: 0 0 10px rgba(74, 222, 128, 0.8);
            animation: glow 2s ease-in-out infinite alternate;
        }
        @keyframes glow {
            from { text-shadow: 0 0 5px rgba(74, 222, 128, 0.8); }
            to { text-shadow: 0 0 20px rgba(74, 222, 128, 0.8); }
        }
    </style>
</head>
<body class="text-white">
    <div class="bg-overlay min-h-screen">
        
        <nav class="bg-gradient-to-r from-green-800 to-green-600 p-4 shadow-lg">
            <div class="container mx-auto flex justify-between items-center">
                <div class="text-xl">
                    <span class="bg-clip-text text-transparent font-extrabold text-[30px] bg-gradient-to-r from-green-300 to-green-100 font-[rh] text-glow">
                        SmartBin Admin
                    </span>
                </div>
                <div class="flex items-center space-x-4">
                    <div class="relative">
                        <div class="w-10 h-10 rounded-full overflow-hidden border-2">
                            <img class="w-full h-full object-cover" src="/images/profilePhoto/<%= admin.profilePic %>" alt="Profile">
                        </div>
                    </div>
                    <a href="/logout" class="backdrop-blur-sm bg-white/40 hover:backdrop-blur-sm bg-red/40 transition duration-300 rounded-md px-3 py-2 inline-block">Logout</a>
                </div>
            </div>
        </nav>

        <div class="container mx-auto p-10">
            <div class="flex items-start gap-3 mb-8 fade-in">
                <h3 class="text-3xl"><span class="font-light">Hello admin,</span> <span class="font-bold"><%= admin.username %></span></h3>
            </div>
            <div class="mt-8 fade-in">
                <h2 class="text-2xl font-bold mb-4">User Requests</h2>
                <div class="backdrop-sepia-0 bg-white/10 rounded-md shadow-md">
                    <table class="w-full">
                        <thead>
                            <tr class="bg-green-800 bg-opacity-30 backdrop-filter backdrop-blur-lg rounded-md shadow-xl text-green-100">
                                <th class="px-4 py-3 text-left">Serial No.</th>
                                <th class="px-4 py-3 text-left">Username</th>
                                <th class="px-4 py-3 text-left">Description</th>
                                <th class="px-4 py-3 text-left">Location</th>
                                <th class="px-4 py-3 text-left">Status</th>
                                <th class="px-4 py-3 text-left">Action</th>
                            </tr>
                        </thead>
                        <tbody id="requestsTableBody">
                        </tbody>
                    </table>
                </div>
                <div class="flex justify-between items-center mt-4 fade-in" x-show="totalPages > 1">
                    <button @click="currentPage--" :disabled="currentPage === 1" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded disabled:opacity-50 disabled:cursor-not-allowed transition duration-300">Previous</button>
                    <span>Page <span x-text="currentPage"></span> of <span x-text="totalPages"></span></span>
                    <button @click="currentPage++" :disabled="currentPage === totalPages" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded disabled:opacity-50 disabled:cursor-not-allowed transition duration-300">Next</button>
                </div>
            </div>
        </div>
    </div>   
    <script>
        function loadRequests() {
            axios.get('/admin/recycling-requests')
                .then(function (response) {
                    const requests = response.data;
                    const tableBody = document.getElementById('requestsTableBody');
                    tableBody.innerHTML = '';
                    var sln = 1;
                    requests.forEach(function(request) {
                        const row = `
                            <tr class="border-b border-green-600 hover:bg-green-800 transition duration-300">
                                <td class="px-4 py-3">${sln}</td>
                                <td class="px-4 py-3">${request.user.username}</td>
                                <td class="px-4 py-3">${request.description}</td>
                                <td class="px-4 py-3">${request.location}</td>
                                <td class="px-4 py-3">${request.status}</td>
                                <td class="px-4 py-3">
                                    ${request.status === 'pending' ? 
                                        `<button onclick="updateStatus('${request._id}')" class="bg-green-500 hover:bg-green-600 text-white px-2 py-1 rounded transition duration-300">
                                            Mark Completed
                                        </button>` : 
                                        'Completed'
                                    }
                                </td>
                            </tr>
                        `;
                        tableBody.innerHTML += row;
                        sln+= 1;
                    });
                })
                .catch(function (error) {
                    console.error('Error loading requests:', error);
                });
        }

        function updateStatus(requestId) {
            axios.post('/admin/update-recycling-status', { requestId })
                .then(function (response) {
                    if (response.data.success) {
                        loadRequests(); // Reload the requests after updating
                    }
                })
                .catch(function (error) {
                    console.error('Error updating status:', error);
                });
        }

        // Load requests when the page loads
        loadRequests();

        document.addEventListener('DOMContentLoaded', (event) => {
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('visible');
                    }
                });
            });

            document.querySelectorAll('.fade-in').forEach((el) => observer.observe(el));

            setTimeout(() => {
                gsap.to('.fade-in', { opacity: 1, y: 0, stagger: 0.2, duration: 0.5 });
            }, 500);
        });
    </script> 
</body>
</html>